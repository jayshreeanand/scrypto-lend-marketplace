import { LitElement } from 'lit';
import './loading-spinner';
import './popover';
import './button';
import './request-item';
import { Account, RequestItem } from '../_types';
import { RadixRequestItem } from './request-item';
export declare class ConnectButton extends LitElement {
    connected: boolean;
    loading: boolean;
    showNotification: boolean;
    showPopover: boolean;
    connecting: boolean;
    requestItems: RequestItem[];
    accounts: Account[];
    explorer: {
        baseUrl: string;
        transactionPath: string;
        accountsPath: string;
    };
    dAppName: string;
    personaLabel: string;
    private subscriptions;
    private readonly fontGoogleApiHref;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    private shouldSkipFontInjection;
    private injectFontCSS;
    private togglePopover;
    private formatAccountAddress;
    private formatAccountLabel;
    private connectButtonTemplate;
    private requestItemsTemplate;
    private connectTemplate;
    private disconnectWalletTemplate;
    private accountListTemplate;
    private sharedDataTemplate;
    private personaTemplate;
    private popoverTemplate;
    private notificationTemplate;
    render(): import("lit").TemplateResult<1>;
    static styles: import("lit").CSSResult;
}
declare global {
    interface HTMLElementTagNameMap {
        'radix-connect-button': ConnectButton;
        'radix-request-item': RadixRequestItem;
    }
}
