export type Account = {
    label: string;
    address: string;
    appearanceId: number;
};
export declare const RequestStatus: {
    readonly pending: "pending";
    readonly success: "success";
    readonly fail: "fail";
};
export declare const RequestItemType: {
    readonly loginRequest: "loginRequest";
    readonly dataRequest: "dataRequest";
    readonly sendTransaction: "sendTransaction";
};
export type RequestItemType = typeof RequestItemType;
export type RequestItemTypes = keyof typeof RequestItemType;
export type RequestStatusTypes = keyof typeof RequestStatus;
export type WalletRequest<RequestType extends RequestItemTypes, Status extends RequestStatusTypes, T = {}> = {
    type: RequestType;
    status: Status;
    id: string;
} & T;
type WalletFailRequest<RequestType extends RequestItemTypes> = WalletRequest<RequestType, 'fail', {
    error: string;
}>;
export type RequestItem = WalletRequest<'loginRequest', 'pending'> | WalletRequest<'loginRequest', 'success'> | WalletFailRequest<'loginRequest'> | WalletRequest<'dataRequest', 'pending'> | WalletRequest<'dataRequest', 'success'> | WalletFailRequest<'dataRequest'> | WalletRequest<'sendTransaction', 'pending'> | WalletRequest<'sendTransaction', 'success', {
    transactionIntentHash: string;
}> | WalletFailRequest<'sendTransaction'>;
export {};
