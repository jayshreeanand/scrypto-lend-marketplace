/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ValidatorCollectionItem } from './ValidatorCollectionItem';
/**
 *
 * @export
 * @interface ValidatorCollection
 */
export interface ValidatorCollection {
    /**
     * Total number of items in underlying collection, fragment of which is available in `items` collection.
     * @type {number}
     * @memberof ValidatorCollection
     */
    total_count?: number | null;
    /**
     * If specified, contains a cursor to query previous page of the `items` collection.
     * @type {string}
     * @memberof ValidatorCollection
     */
    previous_cursor?: string | null;
    /**
     * If specified, contains a cursor to query next page of the `items` collection.
     * @type {string}
     * @memberof ValidatorCollection
     */
    next_cursor?: string | null;
    /**
     *
     * @type {Array<ValidatorCollectionItem>}
     * @memberof ValidatorCollection
     */
    items: Array<ValidatorCollectionItem>;
}
/**
 * Check if a given object implements the ValidatorCollection interface.
 */
export declare function instanceOfValidatorCollection(value: object): boolean;
export declare function ValidatorCollectionFromJSON(json: any): ValidatorCollection;
export declare function ValidatorCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorCollection;
export declare function ValidatorCollectionToJSON(value?: ValidatorCollection | null): any;
