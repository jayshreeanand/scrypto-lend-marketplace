/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { GatewayError } from './GatewayError';
/**
 *
 * @export
 * @interface InternalServerError
 */
export interface InternalServerError extends GatewayError {
    /**
     * Gives an error type which occurred within the Gateway API when serving the request.
     * @type {string}
     * @memberof InternalServerError
     */
    exception: string;
    /**
     * Gives a human readable message - likely just a trace ID for reporting the error.
     * @type {string}
     * @memberof InternalServerError
     */
    cause: string;
}
/**
 * Check if a given object implements the InternalServerError interface.
 */
export declare function instanceOfInternalServerError(value: object): boolean;
export declare function InternalServerErrorFromJSON(json: any): InternalServerError;
export declare function InternalServerErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalServerError;
export declare function InternalServerErrorToJSON(value?: InternalServerError | null): any;
