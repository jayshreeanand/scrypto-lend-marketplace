/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PublicKey } from './PublicKey';
/**
 *
 * @export
 * @interface PublicKeyEcdsaSecp256k1
 */
export interface PublicKeyEcdsaSecp256k1 extends PublicKey {
    /**
     * The hex-encoded compressed ECDSA Secp256k1 public key (33 bytes)
     * @type {string}
     * @memberof PublicKeyEcdsaSecp256k1
     */
    key_hex: string;
}
/**
 * Check if a given object implements the PublicKeyEcdsaSecp256k1 interface.
 */
export declare function instanceOfPublicKeyEcdsaSecp256k1(value: object): boolean;
export declare function PublicKeyEcdsaSecp256k1FromJSON(json: any): PublicKeyEcdsaSecp256k1;
export declare function PublicKeyEcdsaSecp256k1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicKeyEcdsaSecp256k1;
export declare function PublicKeyEcdsaSecp256k1ToJSON(value?: PublicKeyEcdsaSecp256k1 | null): any;
