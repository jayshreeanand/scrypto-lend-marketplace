/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { GatewayError } from './GatewayError';
/**
 *
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * A human-readable error message.
     * @type {string}
     * @memberof ErrorResponse
     */
    message: string;
    /**
     * A numeric code corresponding to the given error type.
     * @type {number}
     * @memberof ErrorResponse
     */
    code?: number;
    /**
     *
     * @type {GatewayError}
     * @memberof ErrorResponse
     */
    details?: GatewayError;
    /**
     * A unique request identifier to be used when reporting errors, to allow correlation with the Gateway API's error logs.
     * @type {string}
     * @memberof ErrorResponse
     */
    trace_id?: string;
}
/**
 * Check if a given object implements the ErrorResponse interface.
 */
export declare function instanceOfErrorResponse(value: object): boolean;
export declare function ErrorResponseFromJSON(json: any): ErrorResponse;
export declare function ErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse;
export declare function ErrorResponseToJSON(value?: ErrorResponse | null): any;
