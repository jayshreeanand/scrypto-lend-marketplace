/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FungibleResourcesCollectionItemVaultAggregatedVaultItem } from './FungibleResourcesCollectionItemVaultAggregatedVaultItem';
import type { LedgerState } from './LedgerState';
/**
 *
 * @export
 * @interface StateEntityFungibleResourceVaultsPageResponse
 */
export interface StateEntityFungibleResourceVaultsPageResponse {
    /**
     *
     * @type {LedgerState}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    ledger_state: LedgerState;
    /**
     * Total number of items in underlying collection, fragment of which is available in `items` collection.
     * @type {number}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    total_count?: number | null;
    /**
     * If specified, contains a cursor to query previous page of the `items` collection.
     * @type {string}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    previous_cursor?: string | null;
    /**
     * If specified, contains a cursor to query next page of the `items` collection.
     * @type {string}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    next_cursor?: string | null;
    /**
     *
     * @type {Array<FungibleResourcesCollectionItemVaultAggregatedVaultItem>}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    items: Array<FungibleResourcesCollectionItemVaultAggregatedVaultItem>;
    /**
     * Bech32m-encoded human readable version of the entity's global address or hex-encoded id.
     * @type {string}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    address: string;
    /**
     * Bech32m-encoded human readable version of the resource (fungible, non-fungible) global address or hex-encoded id.
     * @type {string}
     * @memberof StateEntityFungibleResourceVaultsPageResponse
     */
    resource_address: string;
}
/**
 * Check if a given object implements the StateEntityFungibleResourceVaultsPageResponse interface.
 */
export declare function instanceOfStateEntityFungibleResourceVaultsPageResponse(value: object): boolean;
export declare function StateEntityFungibleResourceVaultsPageResponseFromJSON(json: any): StateEntityFungibleResourceVaultsPageResponse;
export declare function StateEntityFungibleResourceVaultsPageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateEntityFungibleResourceVaultsPageResponse;
export declare function StateEntityFungibleResourceVaultsPageResponseToJSON(value?: StateEntityFungibleResourceVaultsPageResponse | null): any;
