import { NumberOfAccounts } from './schemas';
export declare const provideDefaultNumberOfAccounts: (value: Partial<NumberOfAccounts>) => NumberOfAccounts;
export declare const transformMethodInput: <I extends {}>(input: I) => import("neverthrow").Ok<{
    oneTimeAccounts?: {
        requiresProofOfOwnership: boolean;
        numberOfAccounts: {
            quantifier: "exactly" | "atLeast";
            quantity: number;
        };
    } | undefined;
    oneTimePersonaData?: {
        fields: string[];
    } | undefined;
    discriminator: "unauthorizedRequest";
} | {
    oneTimeAccounts?: {
        requiresProofOfOwnership: boolean;
        numberOfAccounts: {
            quantifier: "exactly" | "atLeast";
            quantity: number;
        };
    } | undefined;
    ongoingAccounts?: {
        requiresProofOfOwnership: boolean;
        numberOfAccounts: {
            quantifier: "exactly" | "atLeast";
            quantity: number;
        };
    } | undefined;
    oneTimePersonaData?: {
        fields: string[];
    } | undefined;
    ongoingPersonaData?: {
        fields: string[];
    } | undefined;
    auth: {
        identityAddress: string;
        discriminator: "usePersona";
    } | {
        challenge?: string | undefined;
        discriminator: "login";
    };
    discriminator: "authorizedRequest";
} | {
    send: {
        message?: string | undefined;
        blobs?: string[] | undefined;
        transactionManifest: string;
        version: number;
    };
    discriminator: "transaction";
}, never>;
