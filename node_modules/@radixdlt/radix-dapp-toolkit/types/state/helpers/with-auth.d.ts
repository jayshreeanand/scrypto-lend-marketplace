import { DataRequestValue, State } from '../../_types';
export declare const withAuth: (request: DataRequestValue, state: State) => {
    usePersona: {
        discriminator: string;
        identityAddress: string;
    };
    oneTimeAccountsWithoutProofOfOwnership?: {
        quantity?: number | undefined;
        quantifier?: "exactly" | "atLeast" | undefined;
    } | undefined;
    oneTimeAccountsWithProofOfOwnership?: {
        quantity?: number | undefined;
        quantifier?: "exactly" | "atLeast" | undefined;
    } | undefined;
    ongoingAccountsWithoutProofOfOwnership?: {
        quantity: number;
        quantifier: "exactly" | "atLeast";
    } | undefined;
    ongoingAccountsWithProofOfOwnership?: {
        quantity: number;
        quantifier: "exactly" | "atLeast";
    } | undefined;
    loginWithoutChallenge?: {} | undefined;
    loginWithChallenge?: {
        challenge: string;
    } | undefined;
    login?: {} | undefined;
    oneTimePersonaData?: {
        fields: string[];
    } | undefined;
    ongoingPersonaData?: {
        fields: string[];
    } | undefined;
} | {
    loginWithoutChallenge: {
        discriminator: string;
    };
    oneTimeAccountsWithoutProofOfOwnership?: {
        quantity?: number | undefined;
        quantifier?: "exactly" | "atLeast" | undefined;
    } | undefined;
    oneTimeAccountsWithProofOfOwnership?: {
        quantity?: number | undefined;
        quantifier?: "exactly" | "atLeast" | undefined;
    } | undefined;
    ongoingAccountsWithoutProofOfOwnership?: {
        quantity: number;
        quantifier: "exactly" | "atLeast";
    } | undefined;
    ongoingAccountsWithProofOfOwnership?: {
        quantity: number;
        quantifier: "exactly" | "atLeast";
    } | undefined;
    usePersona?: {
        identityAddress: string;
    } | undefined;
    loginWithChallenge?: {
        challenge: string;
    } | undefined;
    login?: {} | undefined;
    oneTimePersonaData?: {
        fields: string[];
    } | undefined;
    ongoingPersonaData?: {
        fields: string[];
    } | undefined;
};
