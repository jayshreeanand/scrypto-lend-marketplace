import { Logger } from 'tslog';
import { Account, ConnectButton, RequestItem } from '@radixdlt/connect-button';
import { ConnectButtonProvider } from '../_types';
import { ConnectButtonSubjects } from './subjects';
export type ConnectButtonClient = ReturnType<typeof ConnectButtonClient>;
export declare const ConnectButtonClient: (input: {
    dAppName: string;
    explorer?: {
        baseUrl: string;
        transactionPath: string;
        accountsPath: string;
    } | undefined;
    onConnect?: ((done: (input?: {
        challenge: string;
    }) => void) => void) | undefined;
    subjects?: {
        onConnect: import("rxjs").Subject<{
            challenge: string;
        } | undefined>;
        onDisconnect: import("rxjs").Subject<void>;
        loading: import("rxjs").BehaviorSubject<boolean>;
        connected: import("rxjs").ReplaySubject<boolean>;
        requestItems: import("rxjs").BehaviorSubject<RequestItem[]>;
        onCancelRequestItem: import("rxjs").Subject<string>;
        accounts: import("rxjs").BehaviorSubject<Account[]>;
        connecting: import("rxjs").BehaviorSubject<boolean>;
        showNotification: import("rxjs").BehaviorSubject<boolean>;
        personaLabel: import("rxjs").BehaviorSubject<string>;
    } | undefined;
    logger?: Logger<unknown> | undefined;
}) => ConnectButtonProvider;
